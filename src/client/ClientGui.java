/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import java.awt.event.KeyEvent;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

/**
 *
 * @author guillaume
 */
public class ClientGui extends javax.swing.JFrame {

    /**
     * Creates new form ClientGui
     */
    private Client client;
    private String[] storeAnnonces = null;
    private ArrayList<JTextArea> areasInPane = new ArrayList<>();
    
    public ClientGui(Client client) {
        initComponents();
        this.client = client;
        this.updateIsConnected();
        DateFormat fmt = new SimpleDateFormat("dd/MM/yy H:mm:ss");
        this.console.setText("[ " + fmt.format(new Date()) + " ] DÃ©marrage du client.");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        isConnectedLabel = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        connexionButton = new javax.swing.JButton();
        postAncButton = new javax.swing.JButton();
        requestDomainButton = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        console = new javax.swing.JTextArea();
        contactSellerButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        domainComboBox = new javax.swing.JComboBox<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        listAnnonces = new javax.swing.JList<>();
        postAncCheckBox = new javax.swing.JCheckBox();
        jTextField3 = new javax.swing.JTextField();
        domainComboBox1 = new javax.swing.JComboBox<>();
        ownAncButton = new javax.swing.JButton();
        majAncButton = new javax.swing.JButton();
        deconnexionButton = new javax.swing.JButton();
        postAncCheckBox1 = new javax.swing.JCheckBox();
        jTextField1 = new javax.swing.JTextField();
        delAncButton = new javax.swing.JButton();
        nameTextField1 = new javax.swing.JTextField();
        postAncButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Socket.isClosed()");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel1.setPreferredSize(new java.awt.Dimension(150, 35));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Name");
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel3.setPreferredSize(new java.awt.Dimension(150, 35));
        jLabel3.setRequestFocusEnabled(false);

        isConnectedLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        isConnectedLabel.setText("is_connected");
        isConnectedLabel.setPreferredSize(new java.awt.Dimension(150, 35));

        nameTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        nameTextField.setPreferredSize(new java.awt.Dimension(150, 35));

        connexionButton.setText("Connect");
        connexionButton.setPreferredSize(new java.awt.Dimension(110, 35));
        connexionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connexionButtonActionPerformed(evt);
            }
        });

        postAncButton.setText("Create anc");
        postAncButton.setEnabled(false);
        postAncButton.setPreferredSize(new java.awt.Dimension(79, 35));
        postAncButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postAncButtonActionPerformed(evt);
            }
        });

        requestDomainButton.setText("Ask domains");
        requestDomainButton.setEnabled(false);
        requestDomainButton.setPreferredSize(new java.awt.Dimension(79, 35));
        requestDomainButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestDomainButtonActionPerformed(evt);
            }
        });

        jTextField2.setEnabled(false);
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField2KeyPressed(evt);
            }
        });

        jButton4.setText("Send");
        jButton4.setEnabled(false);
        jButton4.setPreferredSize(new java.awt.Dimension(110, 35));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTabbedPane1.setFocusable(false);
        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        console.setEditable(false);
        console.setColumns(20);
        console.setRows(5);
        console.setFocusable(false);
        jScrollPane1.setViewportView(console);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 756, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Console", jPanel1);

        contactSellerButton.setText("Contact seller");
        contactSellerButton.setEnabled(false);
        contactSellerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contactSellerButtonActionPerformed(evt);
            }
        });

        jTextArea4.setEditable(false);
        jTextArea4.setColumns(20);
        jTextArea4.setRows(5);
        jTextArea4.setEnabled(false);
        jScrollPane4.setViewportView(jTextArea4);

        domainComboBox.setEnabled(false);
        domainComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                domainComboBoxActionPerformed(evt);
            }
        });

        listAnnonces.setEnabled(false);
        listAnnonces.setVisibleRowCount(0);
        listAnnonces.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                listAnnoncesMousePressed(evt);
            }
        });
        jScrollPane5.setViewportView(listAnnonces);

        postAncCheckBox.setText("Create anc");
        postAncCheckBox.setEnabled(false);
        postAncCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postAncCheckBoxActionPerformed(evt);
            }
        });

        jTextField3.setEditable(false);
        jTextField3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField3.setEnabled(false);
        jTextField3.setPreferredSize(new java.awt.Dimension(150, 35));

        domainComboBox1.setEnabled(false);

        ownAncButton.setText("My anc");
        ownAncButton.setEnabled(false);
        ownAncButton.setPreferredSize(new java.awt.Dimension(79, 35));
        ownAncButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ownAncButtonActionPerformed(evt);
            }
        });

        majAncButton.setText("Update anc");
        majAncButton.setEnabled(false);
        majAncButton.setPreferredSize(new java.awt.Dimension(79, 35));
        majAncButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                majAncButtonActionPerformed(evt);
            }
        });

        deconnexionButton.setText("Disconnect");
        deconnexionButton.setEnabled(false);
        deconnexionButton.setPreferredSize(new java.awt.Dimension(110, 35));
        deconnexionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deconnexionButtonActionPerformed(evt);
            }
        });

        postAncCheckBox1.setText("Update anc");
        postAncCheckBox1.setEnabled(false);
        postAncCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postAncCheckBox1ActionPerformed(evt);
            }
        });

        jTextField1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        delAncButton.setText("Delete anc");
        delAncButton.setEnabled(false);
        delAncButton.setPreferredSize(new java.awt.Dimension(110, 35));
        delAncButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delAncButtonActionPerformed(evt);
            }
        });

        nameTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        nameTextField1.setText("192.168.115.130");
        nameTextField1.setPreferredSize(new java.awt.Dimension(150, 35));

        postAncButton1.setText("Custom commande");
        postAncButton1.setPreferredSize(new java.awt.Dimension(79, 35));
        postAncButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postAncButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(postAncButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(domainComboBox, 0, 154, Short.MAX_VALUE)
                                    .addComponent(postAncCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ownAncButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(requestDomainButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(majAncButton, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                                    .addComponent(postAncCheckBox1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane5)
                                    .addComponent(postAncButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(isConnectedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nameTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(delAncButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(connexionButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(deconnexionButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(contactSellerButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane4)
                            .addComponent(jTextField3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(domainComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField1)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(connexionButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deconnexionButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nameTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(isConnectedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delAncButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(domainComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(contactSellerButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(requestDomainButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(domainComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ownAncButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(postAncCheckBox1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(majAncButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(postAncCheckBox))
                            .addComponent(jScrollPane5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(postAncButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(postAncButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void requestDomainButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        this.client.requestDomain();
        this.postAncCheckBox.setEnabled(true);
    }                                                   

    private void connexionButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                
        String name = this.nameTextField.getText();
        if (name == null)
            return;
        if (name.equals("")) {
            this.printConsole("Le nom d'utilisateur ne peut pas Ãªtre vide.");
            return;
        }
        this.client.connect(this.nameTextField.getText());
    }                                               

    private void ownAncButtonActionPerformed(java.awt.event.ActionEvent evt) {                                             
        this.client.requestOwnAnnonce();
    }                                            

    private void domainComboBoxActionPerformed(java.awt.event.ActionEvent evt) {                                               
        @SuppressWarnings("unchecked")
        JComboBox<String> jcb = (JComboBox<String>) evt.getSource();
        String domain = (String) jcb.getSelectedItem();
        this.client.requestAnnonce(domain);
    }                                              

    private void postAncCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {                                                
        JCheckBox jcb = (JCheckBox) evt.getSource();
        if (jcb.isSelected()) {
            this.postAncPerspective();
        } else {
            this.basePerspective();
        }
    }                                               

    private void postAncButtonActionPerformed(java.awt.event.ActionEvent evt) {                                              
        String domain = (String) this.domainComboBox1.getSelectedItem();
        String title = this.jTextField3.getText();
        String descriptif = this.jTextArea4.getText();
        String price = this.jTextField1.getText();
        if (descriptif.contains("\n")) {
            this.printConsole("Descriptif invalide");
            return;
        }
        if (!price.matches("^[0-9]+\\.?[0-9]{0,2}")) {
            this.printConsole("Prix non valide.");
            return;
        }
        this.client.postAnc(domain, title, descriptif, price);
        this.jTextField3.setText("");
        this.jTextArea4.setText("");
        this.jTextField1.setText("");
    }                                             

    private void deconnexionButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        this.client.disconnect();
        this.nameTextField1.setEnabled(true);
        this.connexionButton.setEnabled(true);
        this.deconnexionButton.setEnabled(false);
        this.requestDomainButton.setEnabled(false);
        this.domainComboBox.setEnabled(false);
        this.ownAncButton.setEnabled(false);
        this.postAncCheckBox.setEnabled(false);
        this.majAncButton.setEnabled(false);
        this.postAncButton.setEnabled(false);
        this.postAncButton.setEnabled(false);
        this.delAncButton.setEnabled(false);
        this.jTextField3.setEnabled(false);
        this.domainComboBox1.setEnabled(false);
        this.jTextArea4.setEnabled(false);
        this.jTextField1.setEnabled(false);
        this.contactSellerButton.setEnabled(false);
        this.updateIsConnected();
    }                                                 

    private void listAnnoncesMousePressed(java.awt.event.MouseEvent evt) {                                          
        if (this.listAnnonces.getModel() == null || this.storeAnnonces == null)
            return;
        int idx = this.listAnnonces.getSelectedIndex();
        this.contactSellerButton.setEnabled(true);
        this.jTextField3.setText(this.storeAnnonces[idx * 5 + 2]);
        this.jTextArea4.setText(this.storeAnnonces[idx * 5 + 3]);
        this.jTextField1.setText(this.storeAnnonces[idx * 5 + 4]);
    }                                         

    private void postAncCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        JCheckBox jcb = (JCheckBox) evt.getSource();
        if (jcb.isSelected()) {
            this.updateDelAncPerspective();
        } else {
            this.basePerspective();
        }
    }                                                

    private void majAncButtonActionPerformed(java.awt.event.ActionEvent evt) {                                             
        int idx = this.listAnnonces.getSelectedIndex();
        if (idx == -1)
            return;
        String id = this.storeAnnonces[idx * 5];
        String domain = (String) this.domainComboBox1.getSelectedItem();
        String title = this.jTextField3.getText();
        String descriptif = this.jTextArea4.getText();
        String price = this.jTextField1.getText();
        if (!price.matches("^[0-9]+\\.?[0-9]{0,2}")) {
            this.printConsole("Prix non valide.");
        } else { 
            this.client.majAnc(id, domain, title, descriptif, price);
            this.jTextField3.setText("");
            this.jTextArea4.setText("");
            this.jTextField1.setText("");
            this.listAnnonces.setModel(new DefaultListModel<>());
            this.client.requestOwnAnnonce();
        }
    }                                            

    private void delAncButtonActionPerformed(java.awt.event.ActionEvent evt) {                                             
        int idx = this.listAnnonces.getSelectedIndex();
        if (idx == -1)
            return;
        String id = this.storeAnnonces[idx * 5];
        this.client.delAnc(id);
        this.listAnnonces.setModel(new DefaultListModel<>());
        this.client.requestOwnAnnonce();
    }                                            

    private void contactSellerButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        int idx = this.listAnnonces.getSelectedIndex();
        if (idx == -1)
            return;
        String id = this.storeAnnonces[idx * 5];
        this.client.requestIP(id);
    }                                                   

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {                                         
       try {
			this.client.sendMessage(this.jTabbedPane1.getTitleAt(this.jTabbedPane1.getSelectedIndex()), this.jTextField2.getText());
		} catch (IOException e) {
			e.printStackTrace();
		}
       this.jTextField2.setText("");
    }                                        

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {                                          
        int idx = this.jTabbedPane1.getSelectedIndex();
        if (idx != 0) {
            this.jButton4.setEnabled(true);
            this.jTextField2.setEnabled(true);
        }
        else {
            this.jButton4.setEnabled(false);
            this.jTextField2.setEnabled(false);
            this.jTextField2.setText("");
        }
    }                                         

    private void postAncButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                               
        JTextArea textArea = new JTextArea();
        JOptionPane.showMessageDialog(null, new JScrollPane(textArea), "Write custom command.", JOptionPane.QUESTION_MESSAGE);
        try {
                this.client.sendCustomCommand(textArea.getText());
        } catch (IOException e) {
                e.printStackTrace();
        }
    }                                              

    private void jTextField2KeyPressed(java.awt.event.KeyEvent evt) {                                       
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
            this.jButton4ActionPerformed(null);
    }                                      

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ClientGui(new Client(1027)).setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(ClientGui.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    
    // Variables declaration - do not modify                     
    private javax.swing.JButton connexionButton;
    private javax.swing.JTextArea console;
    private javax.swing.JButton contactSellerButton;
    private javax.swing.JButton deconnexionButton;
    private javax.swing.JButton delAncButton;
    private javax.swing.JComboBox<String> domainComboBox;
    private javax.swing.JComboBox<String> domainComboBox1;
    private javax.swing.JLabel isConnectedLabel;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JList<String> listAnnonces;
    private javax.swing.JButton majAncButton;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JTextField nameTextField1;
    private javax.swing.JButton ownAncButton;
    private javax.swing.JButton postAncButton;
    private javax.swing.JButton postAncButton1;
    private javax.swing.JCheckBox postAncCheckBox;
    private javax.swing.JCheckBox postAncCheckBox1;
    private javax.swing.JButton requestDomainButton;
    // End of variables declaration                   

    public void updateIsConnected() {
        this.isConnectedLabel.setText(String.valueOf(this.client.isConnected()));
    }
    
    public void printConsole(String msg) {
        DateFormat fmt = new SimpleDateFormat("dd/MM/yy H:mm:ss");
        this.console.setText(this.console.getText() + "\n" + "[ " + fmt.format(new Date()) + " ] " +  msg);
    }
    
    public void updateDomainsPostAnc(String[] domains) {
        this.domainComboBox1.removeAllItems();
        for (String s : domains)
            this.domainComboBox1.addItem(s);
    }
    
    public void updateDomains(String[] domains) {
        this.domainComboBox.removeAllItems();
        this.domainComboBox1.removeAllItems();
        for (String s : domains) {
            this.domainComboBox.addItem(s);
            this.domainComboBox1.addItem(s);
        }
    }
    
    public void updateAnnoncesList(String[] annonces) {
        this.storeAnnonces = annonces;
        DefaultListModel<String> newModel = new DefaultListModel<>();
        if (annonces != null)
            for (int i = 0; i < annonces.length; i += 5)
                newModel.addElement("Annonce " + annonces[i]);
        this.listAnnonces.setModel(newModel);
    }
    
    private void postAncPerspective() {
        this.listAnnonces.setModel(new DefaultListModel<>());
        this.listAnnonces.setEnabled(false);
        this.requestDomainButton.setEnabled(false);
        this.domainComboBox.setEnabled(false);
        this.ownAncButton.setEnabled(false);
        this.majAncButton.setEnabled(false);
        this.postAncButton.setEnabled(true);
        this.postAncCheckBox.setEnabled(true);
        this.postAncCheckBox1.setEnabled(false);
        this.contactSellerButton.setEnabled(false);
        this.jTextArea4.setEditable(true);
        this.jTextField3.setEditable(true);
        this.jTextField1.setEditable(true);
        this.domainComboBox1.setEnabled(true);
        this.listAnnonces.setEnabled(true);
        this.jTextField3.setText("");
        this.jTextArea4.setText("");
        this.jTextField1.setText("");
    }
    
    public void basePerspective() {
        this.jButton4.setEnabled(false);
        this.nameTextField.setEnabled(false);
        this.delAncButton.setEnabled(false);
        this.majAncButton.setEnabled(false);
        this.connexionButton.setEnabled(false);
        this.requestDomainButton.setEnabled(true);
        this.domainComboBox.setEnabled(true);
        this.ownAncButton.setEnabled(true);
        this.jTextArea4.setEnabled(true);
        this.jTextField1.setEnabled(true);
        this.jTextField3.setEnabled(true);
        this.jTextField3.setEditable(false);
        this.jTextField1.setEditable(false);
        this.postAncButton.setEnabled(false);
        this.domainComboBox1.setEnabled(false);
        this.listAnnonces.setEnabled(true);
        this.connexionButton.setEnabled(false);
        this.deconnexionButton.setEnabled(true);
        this.nameTextField.setEditable(false);
        this.jTextField3.setText("");
        this.jTextArea4.setText("");
        this.jTextField1.setText("");
    }
    
    private void updateDelAncPerspective() {
        this.listAnnonces.clearSelection();
        this.delAncButton.setEnabled(true);
        this.postAncCheckBox.setEnabled(false);
        this.majAncButton.setEnabled(true);
        this.requestDomainButton.setEnabled(false);
        this.domainComboBox.setEnabled(false);
        this.ownAncButton.setEnabled(false);
        this.postAncButton.setEnabled(false);
        this.contactSellerButton.setEnabled(false);
        this.jTextArea4.setEditable(true);
        this.jTextField3.setEditable(true);
        this.jTextField1.setEditable(true);
        this.domainComboBox1.setEnabled(true);
        this.contactSellerButton.setEnabled(false);
        this.listAnnonces.setEnabled(true);
        this.jTextField3.setText("");
        this.jTextArea4.setText("");
        this.jTextField1.setText("");
    }
    
    public void allowUpdateOwnAnnonce() {
        this.postAncCheckBox1.setEnabled(true);
    }
    
    public String getIPServeur() {
        return this.nameTextField1.getText();
    }
    
    void addConv(String destinataire) {
        JPanel pan = new JPanel();
        JTextArea conv = new JTextArea();
        JScrollPane jscrol = new javax.swing.JScrollPane();
        
        conv.setName(destinataire);
        this.areasInPane.add(conv);
        conv.setEditable(false);
        conv.setColumns(20);
        conv.setRows(5);
        conv.setFocusable(false);
        jscrol.setViewportView(conv);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(pan);
        pan.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jscrol, javax.swing.GroupLayout.DEFAULT_SIZE, 756, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jscrol, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab(destinataire, pan);
        
        this.jTabbedPane1.addTab(destinataire, pan);
    }
    
    public boolean existsConv(String name) {
    	for (JTextArea jta : this.areasInPane) {
            if (jta.getName().equals(name)) {
                return true;
            }
        }
    	return false;
    }
    
    public void writeTabbedPane(String nameComponent, String msg) {
        for (JTextArea jta : this.areasInPane) {
            if (jta.getName().equals(nameComponent)) {
                jta.setText(jta.getText() + "\n" + msg);
            }
        }
    }
}